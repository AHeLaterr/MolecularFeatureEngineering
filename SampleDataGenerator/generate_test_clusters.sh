#!/bin/sh
DATA_DIRECTORY=../TestFragmentDescriptorData
rm -rf $DATA_DIRECTORY || true
mkdir $DATA_DIRECTORY




# Counter for generating the clusters
TEST_DATA_COUNTER=0
INTERCLUSTER_DISTANCE_COUNTER=100
DENSITY_COUNTER=15
ACTIVES_INACTIVES_RATIO=.4

# Grid testing of parameters
for DIMENSIONS in {8..10} # should be 2
do
	for INTERCLUSTER_DISTANCE in {100..300}
	do
		if [ $INTERCLUSTER_DISTANCE_COUNTER -gt 300 ]
		then
			INTERCLUSTER_DISTANCE_COUNTER=100
			break
		fi

		for DENSITY in {15..20} # should be 5
		do
			if [ $DENSITY_COUNTER -gt 20 ]
			then
				DENSITY_COUNTER=15
				break
			fi

			for ACTIVES_INACTIVES_RATIO_INT in {4..5} # should be 1
			do
				CLUSTER_DIRECTORY=$DATA_DIRECTORY/$TEST_DATA_COUNTER
				mkdir $CLUSTER_DIRECTORY
				python generate_clusters.py $CLUSTER_DIRECTORY $DIMENSIONS $INTERCLUSTER_DISTANCE_COUNTER $DENSITY_COUNTER $ACTIVES_INACTIVES_RATIO

				(( TEST_DATA_COUNTER += 1))
				ACTIVES_INACTIVES_RATIO=`echo $ACTIVES_INACTIVES_RATIO + .1|bc`
				echo "Generated a cluster!" $TEST_DATA_COUNTER $DIMENSIONS_COUNTER $INTERCLUSTER_DISTANCE_COUNTER $DENSITY_COUNTER $ACTIVES_INACTIVES_RATIO
			done
			ACTIVES_INACTIVES_RATIO=.4
			(( DENSITY_COUNTER+=5 ))
		done
		(( INTERCLUSTER_DISTANCE_COUNTER +=50 ))
	done
done

echo "Test cluster generation finished!"